var sketch=angular.module('sketch', []);
sketch.controller('myctrl', ['$scope', function($scope){
	var canvas=document.querySelector("#canvas");
	var ctx=canvas.getContext('2d');
	$scope.canvasWH={width:1000,height:500};
	$scope.tool='rect';
	$scope.tools={
		'画圆':'arc',
		'画线':'line',
		'矩形':'rect',
		'橡皮':'earse',
		'铅笔':'pen'
	};
	$scope.setTool=function(value){
		$scope.tool=value;
	};
	var daxiao=40;
	var clearCanvas=function(){
		ctx.clearRect(0,0,$scope.canvasWH.width,$scope.canvasWH.height);
	};
	var current;
	var settools={
		line:function(e){
			canvas.onmousemove=function(ev){
				clearCanvas();
				if(current){
					ctx.putImageData(current,0,0);
				}
				ctx.beginPath();
				ctx.moveTo(e.offsetX,e.offsetY);
				ctx.lineTo(ev.offsetX,ev.offsetY);
				ctx.stroke();
			}
		},
		arc:function(e){
			canvas.onmousemove=function(ev){
				clearCanvas();
				if(current){
					ctx.putImageData(current,0,0);
				}
				ctx.beginPath();
				ctx.arc(e.offsetX,e.offsetY,Math.abs(ev.offsetX-e.offsetX),0,Math.PI*2);
				if($scope.csState.style=='fill'){
					ctx.fill();
				}else{
					ctx.stroke();
				}
			}
		},
		rect:function(e){
			canvas.onmousemove=function(ev){
				clearCanvas();
				if(current){
					ctx.putImageData(current,0,0);
				}
				ctx.beginPath();
				if($scope.csState.style=='fill'){
					ctx.fillRect(e.offsetX-0.5,e.offsetY-0.5,ev.offsetX-e.offsetX,ev.offsetY-e.offsetY);
				}else{
					ctx.strokeRect(e.offsetX-0.5,e.offsetY-0.5,ev.offsetX-e.offsetX,ev.offsetY-e.offsetY);
				}
			}
		},
		pen:function(e){
			ctx.beginPath();
			ctx.moveTo(e.offsetX,e.offsetY);
			canvas.onmousemove=function(ev){
				if(current){
					ctx.putImageData(current,0,0);
				}
				ctx.lineTo(ev.offsetX,ev.offsetY);
				ctx.stroke();
			}
		},
		earse:function(e){
			ctx.clearRect(e.offsetX-daxiao/2,e.offsetY-daxiao/2,daxiao,daxiao);
			canvas.onmousemove=function(ev){
				ctx.clearRect(ev.offsetX-daxiao/2,ev.offsetY-daxiao/2,daxiao,daxiao);
			}
		}
	};
	$scope.colormoren='color1';
	$scope.colors={color1:'#000',color2:'#7f7f7f',color3:'#880015',color4:'#ed1c24',color5:'#ff7f27',color6:'#fff200',color7:'#22b14c',color8:'#00a2e8',color9:'#3f48cc',color10:'#a349a4',color11:'#fff',color12:'#c3c3c3',color13:'#b97a57',color14:'#ffaec9',color15:'#ffc90e',color16:'#efe4b0',color17:'#b5e61d',color18:'#99d9ea',color19:'#7092be',color20:'#c8bfe7'};
	$scope.csState={
		fillStyle:'#000',
		strokeStyle:'#000',
		lineWidth:'1',
		style:'stroke'
	};
	//key传进来的时候是字符串对象中读取值的方法就要用obj.key['aa']
	$scope.setColor=function(key){
        $scope.colormoren=key;
        $scope.csState.fillStyle=$scope.colors[key];
        $scope.csState.strokeStyle=$scope.colors[key];
	}
	$scope.setStyle=function(style){
		$scope.csState.style=style;
	};
	$scope.lineWidth={'a':1,'b':2,'c':3,'d':5,'e':10,'f':20};
	$scope.setline=function(e){
		$scope.csState.lineWidth=$scope.lineWidth[e];
	}
	canvas.onmousedown=function(e){
		ctx.fillStyle=$scope.csState.fillStyle;
		ctx.strokeStyle=$scope.csState.strokeStyle;
		ctx.lineWidth=$scope.csState.lineWidth;
		settools[$scope.tool](e);
	};
	document.onmouseup=function(){
		canvas.onmousemove=null;
		canvas.onmouseup=null;
		current=ctx.getImageData(0,0,$scope.canvasWH.width,$scope.canvasWH.height);
	};
	/*****************************************************************************/
	$scope.save=function(e){
		e.srcElement.href=canvas.toDataURL();
		e.srcElement.download='picture.png';
	};
	/*****************************************************************************/
	$scope.create=function(){
		clearCanvas();
		current=null;
	}
}])